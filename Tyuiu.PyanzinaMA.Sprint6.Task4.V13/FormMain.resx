<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxCondition_PMA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>